buildscript {
    repositories {
        if (rootProject.hasProperty('jmixRepoUrl')) {
            maven {
                url rootProject['jmixRepoUrl']

                if (rootProject.hasProperty('jmixRepoUser') && rootProject.hasProperty('jmixRepoPassword')) {
                    credentials {
                        username rootProject['jmixRepoUser']
                        password rootProject['jmixRepoPassword']
                    }
                }
            }
            gradlePluginPortal()
        } else {
            mavenLocal()
            maven {
                url "https://nexus.jmix.io/repository/public"
            }
            gradlePluginPortal()
        }
    }
    dependencies {
        classpath("io.jmix.build:jmix-build:${rootProject.findProperty('buildPluginVersion') ?: version}")
        classpath("io.jmix.gradle:jmix-gradle-plugin:${rootProject.findProperty('jmixPluginVersion') ?: version}")
    }
}

def dependencySubstitutionMap = [
    'io.jmix.audit:jmix-audit': 'audit',
    'io.jmix.audit:jmix-audit-ui': 'audit-ui',
    'io.jmix.core:jmix-core': 'core',
    'io.jmix.core:jmix-core-starter': 'core-starter',
    'io.jmix.data:jmix-data': 'data',
    'io.jmix.data:jmix-data-starter': 'data-starter',
    'io.jmix.datatools:jmix-datatools-ui': 'datatools-ui',
    'io.jmix.datatools:jmix-datatools-ui-starter': 'datatools-ui-starter',
    'io.jmix.dynattr:jmix-dynattr': 'dynattr',
    'io.jmix.dynattr:jmix-dynattr-ui': 'dynattr-ui',
    'io.jmix.fsfilestorage:jmix-fsfilestorage': 'fsfilestorage',
    'io.jmix.rest:jmix-rest': 'rest',
    'io.jmix.security:jmix-security': 'security',
    'io.jmix.security:jmix-security-data': 'security-data',
    'io.jmix.security:jmix-security-ui': 'security-ui',
    'io.jmix.security:jmix-security-starter': 'security-starter',
    'io.jmix.security:jmix-security-ui-starter': 'security-starter',
    'io.jmix.security:jmix-security-data-starter': 'security-data-starter',
    'io.jmix.sessions:jmix-sessions': 'sessions',
    'io.jmix.ui:jmix-ui': 'ui',
    'io.jmix.ui:jmix-ui-data': 'ui-data',
    'io.jmix.ui:jmix-ui-test-assist': 'ui-test-assist',
    'io.jmix.ui:jmix-ui-themes': 'ui-themes',
    'io.jmix.ui:jmix-ui-themes-compiled': 'ui-themes-compiled',
    'io.jmix.ui:jmix-ui-widgets': 'ui-widgets',
    'io.jmix.ui:jmix-ui-widgets-compiled': 'ui-widgets-compiled',
]

configure(subprojects.findAll { it.name != 'bom' }) {
    apply(plugin: 'io.jmix.build')

    configurations.all {
        resolutionStrategy.dependencySubstitution {
            substitute platform(module("io.jmix.bom:jmix-bom")) with platform(project(':bom'))
            dependencySubstitutionMap.each { key, value ->
                substitute module(key) with project(":$value")
            }
        }
    }
}
